---
import Layout from "../layouts/Layout.astro";
import Grid from '$components/Grid.svelte';
import Greeting from '$components/Greeting.svelte';
import CardList from '$components/CardList.svelte';
import Card from '$components/Card.svelte';
import SelfService from '$components/SelfService.svelte';

import QRCode from 'qrcode';
import fs from 'fs-extra';
import url from 'node:url';
import path from 'node:path';

import video from '$assets/video/river-4k.mp4?url';
import wheelchairImg from '$assets/images/wheelchair.jpg';
import interpretImg from '$assets/images/interpret.jpg';
import assistImg from '$assets/images/assist.jpg';
import interpretIcon from '$assets/icon_interpret.svg?raw';
import wheelchairIcon from '$assets/icon_wheelchair.svg?raw';
import infoIcon from '$assets/icon_info.svg?raw';

const cards = [
  {
    title: 'Need an interpreter?',
    subhead: '¿Necesita un intérprete?',
    icon: interpretIcon,
    image: interpretImg,
  },
  {
    title: 'Need a wheelchair?',
    subhead: '¿Necesita una silla de ruedas?',
    image: wheelchairImg,
    icon: wheelchairIcon,
  },
  {
    title: 'Need any other help?',
    subhead: '¿Necesita alguna otra ayuda?',
    image: assistImg,
    icon: infoIcon,
  }
];

const greeting = {
  highlighted: 'Hello.',
  greeting: 'How can we help you?'
}

export async function getStaticPaths() {
  const __dirname = url.fileURLToPath(import.meta.url);
  const ROOT_DIR = path.resolve(__dirname, '../../');
  const QR_DIR = path.join(ROOT_DIR, './public/qr-codes');

  const selfServiceUrls = [
    ["Patient & visitor guide", "https://patient.uwhealth.org/patient-family-visitor-guide"],
    ["Online Gift shop", "https://secure.uwhealth.org/giftshop/index?shop=main"],
    ["Guest Services phone", "tel:608-263-0315"],
    ["MyChart","https://mychart.uwhealth.org/"],
  ];

  let qrCodes = [];
  const options = {
    errorCorrectionLevel: "M",
    maskPattern: 0,
    margin: 1
  }

  selfServiceUrls.forEach(async (item) => {
    const [title, url] = item;
    const code = await QRCode.toString(url, {type:"svg", ...options});
    fs.ensureDirSync(QR_DIR);
    QRCode.toFile(path.resolve(QR_DIR, `${title}.svg`), url, options);
    qrCodes.push([title, code]);
  });

  const data = await Promise.all(qrCodes).then(() => {
    return [{ params: {name: 'index'}, props: {qrCodes}}]
  });

  return data;
}

const {qrCodes} = Astro.props;
---

<Layout title="University Hospital">
  <main>
    <div class="video-container">
      <video id="video" muted="true" autoplay="true" playsinline loop="true" preload="auto" src={video} class="video"></video>
    </div>

    <div class="skrim"><!-- Blank div for adding a gradient over the background --></div>

    <div class="content">
      <Grid class="base-grid" columns={8} gap='2rem'>

        <Greeting {...greeting} />

        <CardList class='card-list'>
          {cards.map(({title, subhead, image, icon}) => (
            <Card subhead={subhead} image={image} icon={icon}>
              <Fragment slot="title">{title}</Fragment>
            </Card>
          ))}
        </CardList>

        <div class="self-service">
          <SelfService qrCodes={qrCodes}/>
        </div>

      </Grid>
    </div>
  </main>

  <script type="module">
    window.onload = () => {
      const video = document.getElementById('video');
      if (video.paused) video.play();

      setTimeout(()=> { location.reload() }, 600000);
    }
  </script>
</Layout>

<style>
  main {
    height: 100%;
    width: 100%;
    display: grid;
    background-size: cover;
    position: relative;
  }

  .video-container {
    left: 0;
    width: 100%;
    overflow: hidden;
    position: relative;
    aspect-ratio: var(--aspect-ratio);
  }

  .video-container,
  .content {
    grid-column: 1/1;
    grid-row: 1/1;
  }

  .video {
    position: absolute;
    top: 0;
    left: 0;
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: 50% 32%;
  }

  .content {
    position: relative;
    z-index: 3;
  }

  .self-service {
    grid-column: span 3;
    position: relative;
    z-index: 2;
  }

  .base-grid {
    height: 100%;
  }

  :global(.card-list) {
    grid-column: span 3;
    position: relative;
    z-index: 3;
  }

  .skrim {
    position: absolute;
    z-index: 1;
    left: 0; top: 0; bottom: 0; right: 0;
    background-image: linear-gradient(210deg,rgb(34 195 255 / 0%) 65%,rgb(1 27 72 / 70%));
    mix-blend-mode: multiply;
  }
</style>
